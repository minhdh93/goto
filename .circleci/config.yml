# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements_dev.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: make pyperclip work
          command: sudo apt-get install -y xsel 

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements_dev.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements_dev.txt" }}


      - run:
          name: install goto
          command: |
            . venv/bin/activate
            pip install -e .

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            . start_goto
            make test

      - store_artifacts:
          path: test-reports
          destination: test-reports

  test:
    machine:
      image: circleci/classic
      working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: "pyperclip work"
          command: |
            sudo apt-get install -y xsel

      # - restore_cache:
      #     keys:
      #       - v1-versions-3.6.3
      #       # fallback to using the latest cache if no exact match is found
      #       - v1-versions-
      # - run:
      #     name: "install python versions"
      #     command: |
      #       pyenv install 3.6.3

      # - save_cache:
      #     paths:
      #       - /opt/circleci/.pyenv/
      #     key: v1-versions-3.6.3
      
      - run:
          name: "Switch to Python v3.5.2"
          command: |
            pyenv versions
            pyenv global 3.5.2


      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements_dev.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements_dev.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements_dev.txt" }}

      

      - run:
          name: install goto
          command: |
            . venv/bin/activate
            pip install -e .

      
      - run:
          name: "run goto tests"
          command: |
            . venv/bin/activate
            eval "$(pyenv init -)"
            source start_goto
            make endtoendtest
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
